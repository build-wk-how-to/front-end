{"ast":null,"code":"import axios from 'axios';\naxios.defaults.withCredentials = true;\nexport const SEND_SIGNUP = 'SEND_SIGNUP';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\nconst baseUrl = 'http://localhost:9000'; //make dynamic later\n\nexport const signup = x => dispatch => {\n  dispatch({\n    type: SEND_SIGNUP\n  });\n  axios.post(\"\".concat(baseUrl, \"/api/register\"), x).then(res => {\n    dispatch({\n      type: SIGNUP_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => dispatch({\n    type: SIGNUP_FAIL,\n    payload: err\n  }));\n};\nexport const SEND_LOGIN = 'SEND_LOGIN';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const login = x => dispatch => {\n  dispatch({\n    type: SEND_LOGIN\n  });\n  axios.post(\"\".concat(baseUrl, \"/api/login\"), x).then(res => {\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => dispatch({\n    type: LOGIN_FAIL,\n    payload: err\n  }));\n};\nexport const FAIL = 'FAIL';\nexport const FETCHING = 'FETCHING';\nexport const FETCHED = 'FETCHED';\nexport const ADDING = 'ADDING';\nexport const ADDED = 'ADDED';\nexport const UPDATING = 'UPDATING';\nexport const UPDATED = 'UPDATED';\nexport const DELETING = 'DELETING';\nexport const DELETED = 'DELETED';\nexport const fetchAll = token => dispatch => {\n  dispatch({\n    type: FETCHING\n  });\n  let headers = {\n    Authorization: token\n  };\n  axios.get(\"\".concat(baseUrl, \"/api/guides\"), {\n    headers: headers\n  }).then(res => dispatch({\n    type: FETCHED,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: FAIL,\n    payload: err\n  }));\n};\nexport const fetchByCategory = (token, categoryID) => dispatch => {\n  dispatch({\n    type: FETCHING\n  });\n  let headers = {\n    Authorization: token\n  };\n  axios.get(\"\".concat(baseUrl, \"/api/category/\").concat(categoryID), {\n    headers: headers\n  }).then(res => dispatch({\n    type: FETCHED,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: FAIL,\n    payload: err\n  }));\n};\nexport const fetchByUser = (userID, token) => dispatch => {\n  dispatch({\n    type: FETCHING\n  });\n  let headers = {\n    Authorization: token\n  };\n  axios.get(\"\".concat(baseUrl, \"/api/\").concat(userID, \"/guides\"), {\n    headers: headers\n  }).then(res => dispatch({\n    type: FETCHED,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: FAIL,\n    payload: err\n  }));\n};\nexport const fetchByGuide = (userID, guideID, token) => dispatch => {\n  dispatch({\n    type: FETCHING\n  });\n  let headers = {\n    Authorization: token\n  };\n  axios.get(\"\".concat(baseUrl, \"/api/\").concat(userID, \"/guides/\").concat(guideID), {\n    headers: headers\n  }).then(res => dispatch({\n    type: FETCHED,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: FAIL,\n    payload: err\n  }));\n};\nexport const fetchByGuideReadOnly = (guideID, token) => dispatch => {\n  dispatch({\n    type: FETCHING\n  });\n  let headers = {\n    Authorization: token\n  };\n  axios.get(\"\".concat(baseUrl, \"/api/guides/\").concat(guideID), {\n    headers: headers\n  }).then(res => dispatch({\n    type: FETCHED,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: FAIL,\n    payload: err\n  }));\n};\nexport const addGuide = (userID, guide, token) => dispatch => {\n  dispatch({\n    type: ADDING\n  });\n  let headers = {\n    Authorization: token\n  };\n  axios.post(\"\".concat(baseUrl, \"/api/users/\").concat(userID), guide, {\n    headers: headers\n  }).then(res => dispatch({\n    type: ADDED,\n    payload: res.data\n  })).then(() => fetchByUser(userID, token)(dispatch)).catch(err => dispatch({\n    type: FAIL,\n    payload: err\n  }));\n};\nexport const updateGuide = (guideID, userID, post, token) => dispatch => {\n  dispatch({\n    type: UPDATING\n  });\n  let headers = {\n    Authorization: token\n  };\n  axios.put(\"\".concat(baseUrl, \"/api/\").concat(userID, \"/guides/\").concat(guideID), post, {\n    headers: headers\n  }).then(res => dispatch({\n    type: UPDATED,\n    payload: res.data\n  })).then(() => fetchByGuide(userID, token)(dispatch)).catch(err => dispatch({\n    type: FAIL,\n    payload: err\n  }));\n};\nexport const deleteGuide = (userID, guideID, token) => dispatch => {\n  dispatch({\n    type: DELETING\n  });\n  let headers = {\n    Authorization: token\n  };\n  axios.delete(\"\".concat(baseUrl, \"/api/\").concat(userID, \"/guides/\").concat(guideID), {\n    headers: headers\n  }).then(res => dispatch({\n    type: DELETED,\n    payload: res.data\n  })).then(() => fetchByUser(userID, token)(dispatch)).catch(err => dispatch({\n    type: FAIL,\n    payload: err\n  }));\n};","map":{"version":3,"sources":["C:\\Users\\Camo\\documents\\lambda-build\\front-end\\src\\actions\\index.js"],"names":["axios","defaults","withCredentials","SEND_SIGNUP","SIGNUP_SUCCESS","SIGNUP_FAIL","baseUrl","signup","x","dispatch","type","post","then","res","payload","data","catch","err","SEND_LOGIN","LOGIN_SUCCESS","LOGIN_FAIL","login","FAIL","FETCHING","FETCHED","ADDING","ADDED","UPDATING","UPDATED","DELETING","DELETED","fetchAll","token","headers","Authorization","get","fetchByCategory","categoryID","fetchByUser","userID","fetchByGuide","guideID","fetchByGuideReadOnly","addGuide","guide","updateGuide","put","deleteGuide","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nexport const SEND_SIGNUP = 'SEND_SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\n\r\nconst baseUrl = 'http://localhost:9000'; //make dynamic later\r\n\r\nexport const signup = x => dispatch => {\r\n    dispatch({type: SEND_SIGNUP});\r\n    axios.post(`${baseUrl}/api/register`, x)\r\n        .then(res => {\r\n            dispatch({type: SIGNUP_SUCCESS, payload: res.data})})\r\n        .catch(err => dispatch({type: SIGNUP_FAIL, payload: err}));\r\n}\r\n\r\nexport const SEND_LOGIN = 'SEND_LOGIN';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\n\r\n\r\nexport const login = x => dispatch => {\r\n    dispatch({type: SEND_LOGIN});\r\n    axios.post(`${baseUrl}/api/login`, x)\r\n        .then(res => {\r\n            dispatch({type: LOGIN_SUCCESS, payload: res.data});\r\n        })   \r\n        .catch(err => dispatch({type: LOGIN_FAIL, payload: err}));\r\n}\r\n\r\nexport const FAIL = 'FAIL';\r\nexport const FETCHING = 'FETCHING';\r\nexport const FETCHED = 'FETCHED';\r\nexport const ADDING = 'ADDING';\r\nexport const ADDED = 'ADDED';\r\nexport const UPDATING = 'UPDATING';\r\nexport const UPDATED = 'UPDATED';\r\nexport const DELETING = 'DELETING';\r\nexport const DELETED = 'DELETED'; \r\n\r\nexport const fetchAll = (token) => dispatch => {\r\n    dispatch({type: FETCHING});\r\n    let headers = {Authorization: token,};\r\n    axios.get(`${baseUrl}/api/guides`, {headers: headers})\r\n        .then(res => dispatch({type: FETCHED, payload: res.data}))\r\n        .catch(err => dispatch({type: FAIL, payload: err}));\r\n}\r\n\r\nexport const fetchByCategory = (token, categoryID) => dispatch => {\r\n    dispatch({type: FETCHING});\r\n    let headers = {Authorization: token,};\r\n    axios.get(`${baseUrl}/api/category/${categoryID}`, {headers: headers})\r\n        .then(res => dispatch({type: FETCHED, payload: res.data}))\r\n        .catch(err => dispatch({type: FAIL, payload: err}));\r\n}\r\n\r\nexport const fetchByUser = (userID, token) => dispatch => {\r\n    dispatch({type: FETCHING});\r\n    let headers = {Authorization: token,};\r\n    axios.get(`${baseUrl}/api/${userID}/guides`, {headers: headers})\r\n        .then(res => dispatch({type: FETCHED, payload: res.data}))\r\n        .catch(err => dispatch({type: FAIL, payload: err}));\r\n}\r\n\r\nexport const fetchByGuide = (userID, guideID, token) => dispatch => {\r\n    dispatch({type: FETCHING});\r\n    let headers = {Authorization: token,};\r\n    axios.get(`${baseUrl}/api/${userID}/guides/${guideID}`, {headers: headers})\r\n        .then(res => dispatch({type: FETCHED, payload: res.data}))\r\n        .catch(err => dispatch({type: FAIL, payload: err}));\r\n}\r\n\r\nexport const fetchByGuideReadOnly = (guideID, token) => dispatch => {\r\n    dispatch({type: FETCHING});\r\n    let headers = {Authorization: token,};\r\n    axios.get(`${baseUrl}/api/guides/${guideID}`, {headers: headers})\r\n        .then(res => dispatch({type: FETCHED, payload: res.data}))\r\n        .catch(err => dispatch({type: FAIL, payload: err}));\r\n}\r\n\r\nexport const addGuide = (userID, guide, token) => dispatch => {\r\n    dispatch({type: ADDING});\r\n    let headers = {Authorization: token,};\r\n    axios.post(`${baseUrl}/api/users/${userID}`, guide, {headers: headers})\r\n        .then(res => dispatch({type: ADDED, payload: res.data}))\r\n        .then(() => fetchByUser(userID, token)(dispatch))\r\n        .catch(err => dispatch({type: FAIL, payload: err}));\r\n}\r\n\r\nexport const updateGuide = (guideID, userID, post, token) => dispatch => {\r\n    dispatch({type: UPDATING});\r\n    let headers = {Authorization: token,};\r\n    axios.put(`${baseUrl}/api/${userID}/guides/${guideID}`, post, {headers: headers})\r\n        .then(res => dispatch({type: UPDATED, payload: res.data}))\r\n        .then(() => fetchByGuide(userID, token)(dispatch))\r\n        .catch(err => dispatch({type: FAIL, payload: err}))\r\n}\r\n\r\nexport const deleteGuide = (userID, guideID, token) => dispatch => {\r\n    dispatch({type: DELETING});\r\n    let headers = {Authorization: token,};\r\n    axios.delete(`${baseUrl}/api/${userID}/guides/${guideID}`, {headers: headers})\r\n        .then(res => dispatch({type: DELETED, payload: res.data}))\r\n        .then(() => fetchByUser(userID, token)(dispatch))\r\n        .catch(err => dispatch({type: FAIL, payload: err}))\r\n}"]},"metadata":{},"sourceType":"module"}