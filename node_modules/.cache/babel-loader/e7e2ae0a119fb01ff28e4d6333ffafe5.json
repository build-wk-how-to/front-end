{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Camo\\\\documents\\\\lambda-build\\\\front-end\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport rootReducer from './reducers/index';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { loadState, saveState } from './components/LocalStorage'; //if you've never used them before, these functions preserve the state of the redux store between page reloads\n//the functions themselves are in LocalStorage.js in /components\n\nconst persistedStore = loadState();\nconst store = createStore(rootReducer, persistedStore, applyMiddleware(thunk, logger));\nstore.subscribe(() => {\n  saveState(store.getState());\n});\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"/\",\n  component: App,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}))), document.getElementById('root'));","map":{"version":3,"sources":["C:\\Users\\Camo\\documents\\lambda-build\\front-end\\src\\index.js"],"names":["React","ReactDOM","App","BrowserRouter","Router","Route","Provider","applyMiddleware","createStore","rootReducer","thunk","logger","loadState","saveState","persistedStore","store","subscribe","getState","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,QAA6C,kBAA7C;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,eAAR,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,SAAR,EAAmBC,SAAnB,QAAmC,2BAAnC,C,CAGA;AACA;;AACA,MAAMC,cAAc,GAAGF,SAAS,EAAhC;AACA,MAAMG,KAAK,GAAGP,WAAW,CACrBC,WADqB,EAErBK,cAFqB,EAGrBP,eAAe,CAACG,KAAD,EAAQC,MAAR,CAHM,CAAzB;AAOAI,KAAK,CAACC,SAAN,CAAgB,MAAM;AAClBH,EAAAA,SAAS,CAACE,KAAK,CAACE,QAAN,EAAD,CAAT;AACD,CAFH;AAKAhB,QAAQ,CAACiB,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,GAAZ;AAAgB,EAAA,SAAS,EAAEb,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADF,CADF,EAMEiB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {applyMiddleware, createStore} from 'redux';\r\nimport rootReducer from './reducers/index';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport {loadState, saveState} from './components/LocalStorage';\r\n\r\n\r\n//if you've never used them before, these functions preserve the state of the redux store between page reloads\r\n//the functions themselves are in LocalStorage.js in /components\r\nconst persistedStore = loadState();\r\nconst store = createStore(\r\n    rootReducer,\r\n    persistedStore,\r\n    applyMiddleware(thunk, logger),\r\n    \r\n  );\r\n\r\nstore.subscribe(() => {\r\n    saveState(store.getState())\r\n  })\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n        <Route path='/' component={App} />\r\n    </Router>\r\n  </Provider>,  \r\n  document.getElementById('root')\r\n);\r\n"]},"metadata":{},"sourceType":"module"}